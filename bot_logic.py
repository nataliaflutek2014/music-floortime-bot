import logging
from dataclasses import dataclass

from aiogram import Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

@dataclass
class Brand:
    title: str
    tagline: str
    about: str
    tone: str
    colors: dict
    links: dict

brand = Brand(
    title="–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –§–ª–æ—Ä—Ç–∞–π–º ‚Äî –ù–∞—Ç–∞–ª—å—è –ö–∞–º–µ–Ω–µ–≤–∞",
    tagline="DIRFloortime¬Æ ‚Ä¢ –ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è ‚Ä¢ –ò–Ω—Ç–µ—Ä–º–æ–¥–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è —ç–∫—Å–ø—Ä–µ—Å—Å–∏–≤–Ω—ã–º–∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞–º–∏",
    about=(
        "–Ø ‚Äî –ù–∞—Ç–∞–ª—å—è –ö–∞–º–µ–Ω–µ–≤–∞: —ç–∫—Å–ø–µ—Ä—Ç-–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å DIRFloortime¬Æ, –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ç–µ—Ä–∞–ø–µ–≤—Ç, "
        "–º—É–ª—å—Ç–∏–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª–∏—Å—Ç. –° 2014 –≥–æ–¥–∞ –ø—Ä–æ–≤–µ–ª–∞ 4500+ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –∏ —Å–µ–º–µ–π–Ω—ã—Ö —Å–µ—Å—Å–∏–π. "
        "–ü–æ–º–æ–≥–∞—é –¥–µ—Ç—è–º, –ø–æ–¥—Ä–æ—Å—Ç–∫–∞–º –∏ –≤–∑—Ä–æ—Å–ª—ã–º —Å –†–ê–° —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Ä–µ–≥—É–ª—è—Ü–∏—é "
        "–∏ —Ä–∞–¥–æ—Å—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —á–µ—Ä–µ–∑ –∏–≥—Ä—É, –º—É–∑—ã–∫—É –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ. –†–∞–±–æ—Ç–∞—é —Å —Å–µ–º—å—è–º–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ ‚Äî "
        "–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ, –≤ –≥—Ä—É–ø–ø–∞—Ö, –æ–Ω–ª–∞–π–Ω –∏ –æ—Ñ–ª–∞–π–Ω."
    ),
    tone="–¢—ë–ø–ª—ã–π, —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∏ –±–µ–∑ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –æ–±–µ—â–∞–Ω–∏–π.",
    colors={"olive":"#7a8b56", "beige":"#f2ebdd", "peach":"#f7b77c"},
    links={
        "–°–∞–π—Ç": "https://musicfloortime.tilda.ws",
        "–ö—É—Ä—Å ¬´–°–ª—É—Ö, –º—É–∑—ã–∫–∞ –∏ —Ä–µ—á—å¬ª": "https://musicfloortime.tilda.ws/sluhkurs",
        "–¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª": "https://t.me/musicfloortime"
    }
)

DISCLAIMER = (
    "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –±–æ—Ç –Ω–µ —Å—Ç–∞–≤–∏—Ç –¥–∏–∞–≥–Ω–æ–∑—ã –∏ –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –æ—á–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É, –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –∏–ª–∏ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å. "
    "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–æ—Å—è—Ç –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä."
)

def main_menu_kb() -> InlineKeyboardMarkup:
    rows = [
        [
            InlineKeyboardButton(text="üëã –û –ù–∞—Ç–∞–ª—å–µ –∏ –ø–æ–¥—Ö–æ–¥–µ", callback_data="about"),
            InlineKeyboardButton(text="üéµ –ü–æ—á–µ–º—É –º—É–∑—ã–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç", callback_data="music_why")
        ],
        [
            InlineKeyboardButton(text="üß© –ß—Ç–æ —Ç–∞–∫–æ–µ DIRFloortime¬Æ", callback_data="dirf"),
            InlineKeyboardButton(text="üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π", callback_data="parents_materials"),
        ],
        [
            InlineKeyboardButton(text="üìù –ú–∏–Ω–∏-—á–µ–∫–ª–∏—Å—Ç —Å—Ç—Ä–µ—Å—Å–∞", callback_data="stress_check"),
            InlineKeyboardButton(text="üóì –ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="intake_start")
        ],
        [
            InlineKeyboardButton(text="üéì –ö—É—Ä—Å—ã –∏ –æ–±—É—á–µ–Ω–∏–µ", callback_data="courses"),
            InlineKeyboardButton(text="‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=rows)

def back_menu_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚¨ÖÔ∏è –í –º–µ–Ω—é", callback_data="menu")]])

class Intake(StatesGroup):
    parent_name = State()
    child_age = State()
    goals = State()
    contact = State()

def register_handlers(dp: Dispatcher, ADMIN_CHAT_ID: str | None = None):
    @dp.message(CommandStart())
    async def start(m: Message):
        text = (
            f"<b>{brand.title}</b>
{brand.tagline}

"
            f"{DISCLAIMER}

"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è: —Ä–∞—Å—Å–∫–∞–∂—É –æ –ø–æ–¥—Ö–æ–¥–µ, –¥–∞–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, "
            "–∏ ‚Äî –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ ‚Äî —Å–æ–±–µ—Ä—É –∫—Ä–∞—Ç–∫—É—é –∑–∞—è–≤–∫—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.

"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ:"
        )
        await m.answer(text, reply_markup=main_menu_kb())

    @dp.message(Command("menu"))
    async def menu_cmd(m: Message):
        await m.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_kb())

    @dp.callback_query(F.data == "menu")
    async def menu_cb(c: CallbackQuery):
        await c.message.edit_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_kb())
        await c.answer()

    @dp.callback_query(F.data == "about")
    async def about_cb(c: CallbackQuery):
        text = (
            f"<b>–û —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–µ</b>

{brand.about}

"
            "–ú–æ–π –ø–æ–¥—Ö–æ–¥:
"
            "‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å —Ä–µ–±—ë–Ω–∫–∞ ‚Äî –≤ —Ü–µ–Ω—Ç—Ä–µ: —Å–ª–µ–¥—É–µ–º –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å–æ–º, —É—Å–∏–ª–∏–≤–∞–µ–º –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É.
"
            "‚Ä¢ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–≥—É–ª—è—Ü–∏—è –∏ —Å–≤—è–∑—å ‚Äî –æ—Å–Ω–æ–≤–∞ —Ä–∞–∑–≤–∏—Ç–∏—è –º—ã—à–ª–µ–Ω–∏—è –∏ —Ä–µ—á–∏.
"
            "‚Ä¢ –ú—É–∑—ã–∫–∞ –∏ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏—è ‚Äî –º—è–≥–∫–∏–π –ø—É—Ç—å –∫ –∫–æ–Ω—Ç–∞–∫—Ç—É, —Ä–∏—Ç–º—É –∏ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–º—É –≤–Ω–∏–º–∞–Ω–∏—é.
"
            "‚Ä¢ –ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏: —É—á–∏–º—Å—è –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ—Å—Ç—å –≤ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã.
"
        )
        await c.message.edit_text(text, reply_markup=back_menu_kb())
        await c.answer()

    @dp.callback_query(F.data == "music_why")
    async def music_why_cb(c: CallbackQuery):
        text = (
            "<b>–ü–æ—á–µ–º—É –º—É–∑—ã–∫–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏ –∞—É—Ç–∏–∑–º–µ?</b>

"
            "‚Ä¢ –†–∏—Ç–º —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–µ—Ç: –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–ª—É –∏ –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –Ω–∞—Ö–æ–¥–∏—Ç—å —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å.
"
            "‚Ä¢ –ó–≤—É–∫ ‚Äî –¥–æ—Ä–æ–≥–∞ –∫ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–º—É –≤–Ω–∏–º–∞–Ω–∏—é: –ø—Ä–æ—â–µ ¬´–≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è¬ª –≤ –º–µ–ª–æ–¥–∏–∏, —á–µ–º –≤ —Å–ª–æ–≤–∞—Ö.
"
            "‚Ä¢ –ò–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏—è —Ä–∞–∑–≤–∏–≤–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É –∏ –≥–∏–±–∫–æ—Å—Ç—å ‚Äî —á–µ—Ä–µ–∑ –∏–≥—Ä—É –∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ.
"
            "‚Ä¢ –ú—É–∑—ã–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–µ–≥—É–ª—è—Ü–∏—é: –¥—ã—à–∏–º, –¥–≤–∏–≥–∞–µ–º—Å—è, ¬´–∫–∞—á–∞–µ–º¬ª —Ç–µ–º–ø –∏ –¥–∏–Ω–∞–º–∏–∫—É.

"
            "–ü—Ä–∞–∫—Ç–∏–∫–∞ –¥–æ–º–∞ (3 –∏–¥–µ–∏ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å):
"
            "1) ¬´–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –¥–∏–∞–ª–æ–≥¬ª: –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ —Ä–∏—Ç–º —Ä–µ–±—ë–Ω–∫–∞ (–ª–∞–¥–æ–Ω–∏/—Å—Ç–æ–ª), –∑–∞—Ç–µ–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –º–∏–∫—Ä–æ-–∏–∑–º–µ–Ω–µ–Ω–∏–µ.
"
            "2) ¬´–ó–≤—É–∫–æ–≤–∞—è –ø–∞—É–∑–∞¬ª: 30‚Äì60 —Å–µ–∫—É–Ω–¥ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –¥—ã—Ö–∞–Ω–∏—è + —Ç–∏—Ö–∏–π –¥–ª–∏–Ω–Ω—ã–π –∑–≤—É–∫ (–Ω–∞ ¬´–º-–º-–º¬ª).
"
            "3) ¬´–ü–µ—Å–µ–Ω–∫–∞-—Ä–∏—Ç—É–∞–ª¬ª: –∫–æ—Ä–æ—Ç–∫–∞—è –º–µ–ª–æ–¥–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ (—Å–±–æ—Ä—ã, —É–º—ã–≤–∞–Ω–∏–µ, —Å–æ–Ω).
"
        )
        await c.message.edit_text(text, reply_markup=back_menu_kb())
        await c.answer()

    @dp.callback_query(F.data == "dirf")
    async def dir_cb(c: CallbackQuery):
        text = (
            "<b>DIRFloortime¬Æ ‚Äî –∫—Ä–∞—Ç–∫–æ</b>

"
            "‚Ä¢ D (Developmental): —Ñ–æ–∫—É—Å –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ-—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å—Ç–∞–¥—è—Ö —Ä–∞–∑–≤–∏—Ç–∏—è.
"
            "‚Ä¢ I (Individual): —á—É–≤—Å—Ç–≤—É–µ–º —Å–µ–Ω—Å–æ—Ä–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å, —Ç–µ–º–ø –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã —Ä–µ–±—ë–Ω–∫–∞.
"
            "‚Ä¢ R (Relationship): –æ—Ç–Ω–æ—à–µ–Ω–∏—è ‚Äî –¥–≤–∏–≥–∞—Ç–µ–ª—å —Ä–∞–∑–≤–∏—Ç–∏—è.

"
            "–ö–∞–∫ —ç—Ç–æ –≤—ã–≥–ª—è–¥–∏—Ç:
"
            "‚Äî –í—Ö–æ–¥–∏–º –≤ –∏–≥—Ä—É —Ä–µ–±—ë–Ω–∫–∞, –æ—Ç–∫–ª–∏–∫–∞–µ–º—Å—è –Ω–∞ –µ–≥–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É, –º—è–≥–∫–æ —Ä–∞—Å—à–∏—Ä—è–µ–º.
"
            "‚Äî –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—Å—è –Ω–∞ —Ä–∏—Ç–º/—Å–µ–Ω—Å–æ—Ä–∏–∫—É (–¥–≤–∏–∂–µ–Ω–∏–µ, –∑–≤—É–∫, –æ—Å—è–∑–∞–Ω–∏–µ) –∏ –¥–∞—ë–º –ø–æ—Å–∏–ª—å–Ω—ã–µ –≤—ã–∑–æ–≤—ã.
"
            "‚Äî –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ, –ø—Ä–∏—á–∏–Ω–Ω–æ—Å—Ç—å –∏ –∑–∞—Ä–æ–∂–¥–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–æ–π –∏–≥—Ä—ã.
"
        )
        await c.message.edit_text(text, reply_markup=back_menu_kb())
        await c.answer()

    @dp.callback_query(F.data == "parents_materials")
    async def materials_cb(c: CallbackQuery):
        links = "
".join([f"‚Ä¢ <a href='{url}'>{name}</a>" for name, url in brand.links.items()])
        text = (
            "<b>–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π</b>

"
            "–ü–æ–¥–±–æ—Ä–∫–∞ –¥–ª—è —Å–ø–æ–∫–æ–π–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞:
"
            "‚Ä¢ ¬´–°—Ç–∏–º–º–∏–Ω–≥: —É–≤–∞–∂–∞—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å¬ª ‚Äî —á—Ç–æ —ç—Ç–æ –∏ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º.
"
            "‚Ä¢ ¬´–ü–µ—Ä–µ—Ö–æ–¥—ã –±–µ–∑ —Å–ª—ë–∑¬ª ‚Äî –º–∏–Ω–∏-–≥–∞–π–¥ –ø–æ —Ä–∏—Ç—É–∞–ª–∞–º –∏ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º –ø–æ–¥—Å–∫–∞–∑–∫–∞–º.
"
            "‚Ä¢ ¬´10 –∏–¥–µ–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –∏–≥—Ä –¥–æ–º–∞¬ª ‚Äî –æ—Ç —Ä–∏—Ç–º–∏—á–µ—Å–∫–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –¥–æ –ø–µ—Å–µ–Ω-–ø—Ä–æ—Ü–µ–¥—É—Ä.

"
            f"{links}

"
            "–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è ‚Äî –æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é¬ª."
        )
        await c.message.edit_text(text, reply_markup=back_menu_kb())
        await c.answer()

    @dp.callback_query(F.data == "stress_check")
    async def stress_check_cb(c: CallbackQuery):
        text = (
            "<b>–ú–∏–Ω–∏-—á–µ–∫–ª–∏—Å—Ç —Å—Ç—Ä–µ—Å—Å–∞ —Ä–æ–¥–∏—Ç–µ–ª—è (—Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞)</b>

"
            "–û—Ç–º–µ—Ç—å—Ç–µ –ø—Ä–æ —Å–µ–±—è: 
"
            "1) –Ø —Å–ø–ª—é –Ω–µ –º–µ–Ω–µ–µ 6‚Äì7 —á–∞—Å–æ–≤ —á–∞—â–µ –≤—Å–µ–≥–æ.
"
            "2) –£ –º–µ–Ω—è –µ—Å—Ç—å 10‚Äì15 –º–∏–Ω—É—Ç —Ç–∏—à–∏–Ω—ã –µ–∂–µ–¥–Ω–µ–≤–Ω–æ.
"
            "3) –Ø –∏–º–µ—é 1‚Äì2 ¬´–±—ã—Å—Ç—Ä—ã—Ö¬ª —Å–ø–æ—Å–æ–±–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è (–¥—ã—Ö–∞–Ω–∏–µ/–º—É–∑—ã–∫–∞/–¥–≤–∏–∂–µ–Ω–∏–µ).
"
            "4) –£ –Ω–∞—Å –µ—Å—Ç—å 2‚Äì3 –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã—Ö —Ä–∏—Ç—É–∞–ª–∞ –≤ —Å–µ–º—å–µ.

"
            "–ï—Å–ª–∏ ¬´–Ω–µ—Ç¬ª –±–æ–ª—å—à–µ —á–µ–º –Ω–∞ 2 –ø—É–Ω–∫—Ç–∞ ‚Äî —ç—Ç–æ —Å–∏–≥–Ω–∞–ª –±–µ—Ä–µ–∂–Ω–æ –ø–æ–Ω–∏–∑–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–µ–±–µ, "
            "—É–ø—Ä–æ—Å—Ç–∏—Ç—å –¥–µ–Ω—å –∏ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è. 

"
            "–ú–∏–∫—Ä–æ-–ø—Ä–∞–∫—Ç–∏–∫–∞: 2 –º–∏–Ω—É—Ç—ã ¬´–¥—ã—Ö–∞–Ω–∏–µ + –∑–≤—É–∫¬ª ‚Äî 4 –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –≤–¥–æ—Ö–∞ –Ω–æ—Å–æ–º, –Ω–∞ –≤—ã–¥–æ—Ö–µ —Ç–∏—Ö–∏–π –∑–≤—É–∫ ¬´–º-–º-–º¬ª. "
            "–î–µ–ª–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å —Ä–µ–±—ë–Ω–∫–æ–º ‚Äî —ç—Ç–æ –∑–∞—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ –∏ —É—Å–ø–æ–∫–∞–∏–≤–∞–µ—Ç."
        )
        await c.message.edit_text(text, reply_markup=back_menu_kb())
        await c.answer()

    @dp.callback_query(F.data == "courses")
    async def courses_cb(c: CallbackQuery):
        text = (
            "<b>–û–±—É—á–µ–Ω–∏–µ –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã</b>

"
            "‚Ä¢ ¬´–°–ª—É—Ö, –º—É–∑—ã–∫–∞ –∏ —Ä–µ—á—å¬ª ‚Äî –∫—É—Ä—Å –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤: –∫–∞–∫ –∑–≤—É–∫ –∏ —Ä–∏—Ç–º –ø–æ–º–æ–≥–∞—é—Ç "
            "—Ä–µ–≥—É–ª—è—Ü–∏–∏, –≤–Ω–∏–º–∞–Ω–∏—é –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏.
"
            "‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ —Å–µ–º—å–∏: —Ä–∞–∑–±–æ—Ä –≤–∏–¥–µ–æ, –¥–æ–º–∞—à–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Ä–∏—Ç—É–∞–ª—ã.
"
            "‚Ä¢ –°—É–ø–µ—Ä–≤–∏–∑–∏–∏ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤: –∫–µ–π—Å—ã, —Ä–∞–∑–±–æ—Ä —Å–µ—Å—Å–∏–π, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.

"
            "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –∏ –∑–∞–ø–∏—Å—å ‚Äî –ø–æ –∫–Ω–æ–ø–∫–∞–º –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π¬ª –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –≤ –±–æ—Ç–µ."
        )
        await c.message.edit_text(text, reply_markup=back_menu_kb())
        await c.answer()

    @dp.callback_query(F.data == "faq")
    async def faq_cb(c: CallbackQuery):
        text = (
            "<b>–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>

"
            "‚Ä¢ <b>–≠—Ç–æ –∑–∞–º–µ–Ω–∏—Ç –∑–∞–Ω—è—Ç–∏—è —Å –ª–æ–≥–æ–ø–µ–¥–æ–º/–ø—Å–∏—Ö–æ–ª–æ–≥–æ–º?</b>
"
            "–ù–µ—Ç. –≠—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π –ø–æ–¥—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Ä–µ–±—ë–Ω–∫—É –±—ã—Ç—å —É—Å—Ç–æ–π—á–∏–≤–µ–µ –∏ –≤–∫–ª—é—á—ë–Ω–Ω–µ–µ –≤ —Ä–∞–±–æ—Ç—É.

"
            "‚Ä¢ <b>–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –º—É–∑—ã–∫–æ–π?</b>
"
            "–ú—É–∑—ã–∫–∞ ‚Äî –º–æ—â–Ω—ã–π –≤—Ö–æ–¥ –≤ –∫–æ–Ω—Ç–∞–∫—Ç –∏ —Ä–µ–≥—É–ª—è—Ü–∏—é, –Ω–æ –º—ã —Å–æ–µ–¥–∏–Ω—è–µ–º –µ—ë —Å –∏–≥—Ä–æ–π, –¥–≤–∏–∂–µ–Ω–∏–µ–º, —Ä—É—Ç–∏–Ω–æ–π —Å–µ–º—å–∏.

"
            "‚Ä¢ <b>–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã –æ–Ω–ª–∞–π–Ω?</b>
"
            "–î–∞. –§–æ—Ä–º–∞—Ç—ã ‚Äî –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏, —Ä–∞–∑–±–æ—Ä –≤–∏–¥–µ–æ, —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª–µ–π –∏ —Å—É–ø–µ—Ä–≤–∏–∑–∏–∏.

"
            "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –±–æ—Ç –Ω–µ —Å—Ç–∞–≤–∏—Ç –¥–∏–∞–≥–Ω–æ–∑—ã –∏ –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –æ—á–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É, –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –∏–ª–∏ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å. "
            "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–æ—Å—è—Ç –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä."
        )
        await c.message.edit_text(text, reply_markup=back_menu_kb())
        await c.answer()

    @dp.callback_query(F.data == "intake_start")
    async def intake_start_cb(c: CallbackQuery, state: FSMContext):
        await state.set_state(Intake.parent_name)
        await c.message.edit_text(
            "<b>–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</b>

–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–ò–º—è –∏, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, —Ñ–∞–º–∏–ª–∏—è)",
            reply_markup=back_menu_kb()
        )
        await c.answer()

    @dp.message(Intake.parent_name)
    async def intake_parent_name(m: Message, state: FSMContext):
        await state.update_data(parent_name=m.text.strip())
        await state.set_state(Intake.child_age)
        await m.answer("–í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±—ë–Ω–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 3 –≥–æ–¥–∞ 4 –º–µ—Å—è—Ü–∞):")

    @dp.message(Intake.child_age)
    async def intake_child_age(m: Message, state: FSMContext):
        await state.update_data(child_age=m.text.strip())
        await state.set_state(Intake.goals)
        await m.answer("–ö–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å/—Ü–µ–ª–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´—á–∞—Å—Ç—ã–µ –∏—Å—Ç–µ—Ä–∏–∫–∏¬ª, ¬´—Å–ª–æ–∂–Ω–æ —Å —Ä–µ—á—å—é¬ª, ¬´–∑–∞—Ç—Ä—É–¥–Ω–µ–Ω—ã –ø–µ—Ä–µ—Ö–æ–¥—ã¬ª):")

    @dp.message(Intake.goals)
    async def intake_goals(m: Message, state: FSMContext):
        await state.update_data(goals=m.text.strip())
        await state.set_state(Intake.contact)
        await m.answer("–ö–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è? (–¢–µ–ª–µ–≥—Ä–∞–º @–Ω–∏–∫ –∏–ª–∏ e-mail):")

    @dp.message(Intake.contact)
    async def intake_contact(m: Message, state: FSMContext):
        await state.update_data(contact=m.text.strip())
        data = await state.get_data()
        await state.clear()

        summary = (
            "<b>–ó–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!</b>

"
            f"–ò–º—è: {data.get('parent_name')}
"
            f"–í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±—ë–Ω–∫–∞: {data.get('child_age')}
"
            f"–¶–µ–ª–∏/–∑–∞–ø—Ä–æ—Å: {data.get('goals')}
"
            f"–ö–æ–Ω—Ç–∞–∫—Ç: {data.get('contact')}

"
            "–°–ø–∞—Å–∏–±–æ! –Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏, —á—Ç–æ–±—ã —Å–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç –∏ –≤—Ä–µ–º—è."
        )
        await m.answer(summary, reply_markup=main_menu_kb())

        if ADMIN_CHAT_ID:
            try:
                await m.bot.send_message(int(ADMIN_CHAT_ID), f"üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:
{summary}")
            except Exception as e:
                logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É: {e}")

    @dp.message()
    async def fallback(m: Message):
        await m.answer(
            "–Ø —Å–ª—ã—à—É –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ß—Ç–æ–±—ã –±—ã–ª–æ –±—ã—Å—Ç—Ä–µ–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ ‚Äî –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:",
            reply_markup=main_menu_kb()
        )
